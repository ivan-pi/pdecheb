      SUBROUTINE INICHB(NEQN,NPDE,NPTS,X,U,WK,IWK,M,TS,IBAND,ITIME,XBK,
     *                  IBK,NEL,NPOLY,NV,NXI,XI,IDEV)
C***********************************************************************
C ROUTINE FOR INITIALISATION OF CHEBYSHEV GENERALIZED COLLOCATION METHOD
C
C  PARAMETER LIST
C ----------------
C  NEQN:          EMPTY ON ENTRY, ON EXIT IT CONTAINS THE NUMBER OF
C                 O.D.E.S GENERATED BY THE DISCRETISED FORM OF THE
C                 P.D.E. , GIVEN BY  NPDE*NEL*(NPTL-1) + NPDE + NV.
C
C  NPDE           NUMBER OF PARABOLIC P.D.E.S IN ONE SPACE DIMENSION
C
C  NPTS           NUMBER OF SPATIAL GRID POINTS USED IN M.O.L. SOLUTION.
C                 NOTE THIS SHOULD BE EQUAL TO (NPTL-1)*NEL + 1
C
C  X(NPTS)        EMPTY ARRAY ON ENTRY . ON EXIT THIS ARRAY
C                 CONTAINS THE MESH USED IN SEMI-DISCRETISATION
C
C  M              =0,1,2 IF CARTESIAN CYLINDRICAL OR SPHERICAL POLARS.
C
C  U(NEQN)        SOLUTION VECTOR  EMPTY ON ENTRY CONTAINS INITIAL
C                 VALUES ON EXIT. THIS ARRAY IS ORDERED AS FOLLOWS.
C                 U(1) - U(NPDE*NPTS)      P.D.E. SOLUTION COMPONENTS.
C                 U(NPDE*NPTS+1) - U(NEQN) O.D.E. COMPONENTS THAT ARE
C                 COUPLED TO THE P.D.E.
C
C  WK(IWK)        REAL WORKSPACE USED TO PASS FOUR MATRICES AND VARIOUS
C                 USEFUL VECTORS TO THE O.D.E.FUNCTION CALL ROUTINE
C                 RESID SEE BELOW FOR A DETAILED DESCRIPTION.
C
C   TS            STARTING LEVEL OF TIME INTEGRATION.
C
C   XBK(IBK)      REAL ARRAY OF BREAK POINTS  IBK = NEL +1  WHERE
C                 NEL IS THE NUMBER OF SPATIAL ELEMENTS.
C                      XBK(1) = XLEFT
C                      XBK(I) =< XBK(I+1)  I = 1,...,NEL .
C                      XBK(IBK) = XRIGHT.
C  NEL            THE NUMBER OF SPATIAL ELEMENTS , >= 1
C
C  NPOLY          THE DEGREE OF THE APPROXIMATING POLYNOMIAL USED
C                 BETWEEN EACH PAIR OF BREAKPOINTS .
C  ITIME          THIS MUST BE SET = 1 ON THE CALL OF THIS MODULE
C                 PRIOR TO THE DASSL  PACKAGE BEING CALLED.
C                 ONCE DASSL  HAS RETURNED THIS ROUTINE MAY BE CALLED
C                 WITH ITIME = 2 TO RECOVER THE SPATIAL MESH USED
C                 (THIS IS PLACED IN THE ARRAY X(NPTS) ).
C
C  NV             THE NUMBER OF AUXILARY O.D.E.S THAT ARE COUPLED TO
C                 THE P.D.E.
C  NXI            THE NUMBER OF COUPLING POINTS AT WHICH P.D.E. VALUES
C                 ARE USED TO DEFINE THE O.D.E.S
C
C  XI(NXI)        A VECTOR SPECIFYING THE POSITION OF THESE POINTS.
C                 NOTE THAT THESE POINTS MUST BE DISTINCT FROM THE
C                 BREAK - POINTS .
C
C  IDEV           NUMBER OF OUTPUT CHANNEL ON WHICH ERROR MESSAGES TO
C                 DO WITH THE COLLOCATION DISCRETISATION WILL APPEAR.
C
C---------------------------------------------------------------------
C   EIGHT IMPORTANT PARAMETERS ARE PASSED ACROSS FROM HERE IN
C   COMMON /SCHSZ1/ NNEL, NNPTL, NNPDE, NNPTS, MM, NNV, NNXI, NVST
C
C  NNEL  = NEL
C
C  NNPTL = NPTL = NPOLY + 1
C
C  NNPDE = NPDE     THE NUMBER OF P.D.E.S
C
C  NNPTS = NPTS     THE TOTAL NUMBER OF MESHPOINTS = NEL*(NPTL-1) + 1
C
C  MM = M           = 0,1,2 CARTESIAN, CYLINDRICAL OR SPHERICAL POLAR
C                           CO-ORDINATES IN USE.
C  NNV = NV         NUMBER OF AUXILLARY ODES
C
C  NNXI= NXI        THE NUMBER OF COUPLING POINTS
C
C  NVST             THE STARTING POINT OF THE ODE COMPONENTS IN THE
C                   SOLUTION VECTOR.
C----------------------------------------------------------------------
C
C     DETAILED DESCRIPTION OF WORKSPACE
C    -----------------------------------
C        THE WORKSPACE WK(IWK) IS USED TO PASS ARRAYS AND VECTORS TO
C        THE ROUTINES  RESID AND CHINTR.
C
C        SIZE  :  IWK MUST BE >= 2*NPTL*(NPTL+NEL+1) + 2 + NV +
C                                  NPDE*(7 * (NPTL + NXI) + 8)
C
C     STRUCTURE        NAME IN CODE   PURPOSE IN CODE IS TO HOLD
C     *********
C     WK(1)  -  WK(I2-1)  OMEGA     MATRIX OMEGA FOR MAPPING TO COEFFS
C     WK(I2) -  WK(I3-1)  DU        MATRIX DU FOR FORMING DUDX
C     WK(I3) -  WK(I4-1)  DUTEM     TEMPORARY WORK AREA
C     WK(I4) -  WK(I7-1)  XC        CHEBYSHEV POINTS IN (-1,1)
C     WK(I7) -  WK(I8-1)  BETA      BETA (NPDE,4)       ARRAY FOR B.C.S
C     WK(I8) -  WK(I9-1)  GAMMA     GAMMA(NPDE,4)       ARRAY FOR B.C.S.
C     WK(I9) -  WK(I10-1)  DUDX     DUDX(NPDE,NPTL)     !WORKSPACES
C     WK(I10)-  WK(I11-1)   RT      R(3*NPDE,NPTS)      !USED INSIDE
C     WK(I11)-  WK(I12-1)   QT      Q(3*NPDE,NPTS)      !ROUTINE CRES
C     WK(I12)-  WK(I13-1)   CCR     COEFFS OF CLENSHAW CURTIS RULE OF
C                                   DEGREE NPTL-1.
C     ---------------------THE FOLLOWING PARTS OF THE WORKSPACE ARE USED
C                          IN SEMI-DISCRETISING MIXED O.D.E./P.D.E.
C                          PROBLEMS.
C     WK(I13)-  WK(I14-1) UI        ARRAY UI(NPDE,NXI) USED TO HOLD THE
C                                   PDE COMPONENTS AT THE COUPLING PTS .
C     WK(I14)-  WK(I15-1) UXI       SPACE DERIVS CORRESS TO ARRAY UI.
C     WK(I15)-  WK(I16-1) RI        FLUX CORRESS TO UI ARRAY
C     WK(I16)-  WK(I17-1) UTI       TIME DERIV CORRESS TO UI ARRAY.
C     WK(I17)-  WK(I18-1) UTXI      SPACE DERIV OF ARRAY UTI.
C     WK(I18)-  WK(I19-1) XI        COUPLING POINTS TO LINK PDE TO ODE.
C     WK(I19)-  WK(I20)   VDUM      ARRAY OF ZEROES.
C
C     --------------------THE FOLLOWING TWO PARTS OF WK HOLD THE MESH
C                         POINT INFORMATION USED IN SEMI-DISCRETISATION.
C     WK(I5) -  WK(I6-1)  XBK(IBK)  BREAKPOINTS USED BY THE CODE
C     WK(I6) -  WK(I13)   X(NPTS)   SPATIAL MESH POINTS USED BY THE CODE
C
C   THE ARRAYS BETA AND GAMMA ARE USED IN THE FORMATION OF THE
C   BOUNDARY CONDITIONS. THE ARRAYS DUDX R AND Q HOLD THE TEMPORARY
C   VARIABLES NEEDED IN THE CONSTRUCTION OF THE RESIDUAL OF THE O.D.E.
C   SYSTEM.
C   NOTE ; THE MESH POINTS AND BREAK POINTS ARE STORED AT THE END OF THE
C   *****  WORKSPACE WK SO THAT THE BREAK POINTS MAY BE INCREASED OR
C          DECREASED BY A MESH MODIFICATION ROUTINE. IN SUCH CASES THE
C          MESH POINTS MUST BE RECOMPUTED AS THEY ARE THE CHEBYSHEV
C          POINTS IN  (-1,1) MAPPED ONTO THE INTERVAL. THE CODE TO DO
C          THIS IS GIVEN BY
C          DO 10 I = 1, NEL
C             H1 = XBK(I+1) - XBK(I)
C             H2 = XBK(I=1) + XBK(I)
C             DO 10 J = 1, NPTL
C                IJ = (I-1)*(NPTL -1) + J
C      10        X(IJ) = (XC(J)) * H1 + H2) * 0.5D0
C         WHERE THE VALUES OF XBK AND XC MUST BE EXTRACTED FROM THE
C         WORKSPACE AND THE NEW VALUES OF X PUT IN THE WORKSPACE.
C
C   THE PARAMETERS I2,...,I20  ARE DEFINED BELOW.
C
C**********************************************************************
C     .. Scalar Arguments ..
      DOUBLE PRECISION  TS
      INTEGER           IBAND, IBK, IDEV, ITIME, IWK, M, NEL, NEQN,
     *                  NPDE, NPOLY, NPTS, NV, NXI
C     .. Array Arguments ..
      DOUBLE PRECISION  U(1), WK(IWK), X(NPTS), XBK(IBK), XI(1)
C     .. Scalars in Common ..
      DOUBLE PRECISION  TO, TWOU
      INTEGER           I10, I10A, I10B, I11, I11A, I11B, I12, I13, I14,
     *                  I15, I16, I17, I18, I19, I2, I3, I4, I5, I6, I7,
     *                  I8, I9, ILOC, INDEV, JTIMES, K1, K2, K3, K4, MM,
     *                  NNEL, NNNPTL, NNPDE, NNPTL, NNPTS, NNV, NNXI,
     *                  NVST
      CHARACTER*6       PDCODE
C     .. Local Scalars ..
      DOUBLE PRECISION  TEMP, TEMP2
      INTEGER           I, I20, IBKM1, IT, IV, J, NPTL, NSQ
      CHARACTER*240     ERRMSG
C     .. External Subroutines ..
      EXTERNAL          CSET, SCHERR
C     .. Intrinsic Functions ..
      INTRINSIC         DABS, DMAX1
C     .. Common blocks ..
      COMMON            /DISCHK/PDCODE
      COMMON            /SCHSZ/I2, I3, I4, I5, I6, I7, I8, I9, I10,
     *                  I10A, I10B, I11, I11A, I11B, I12, I13, I14, I15,
     *                  I16, I17, I18, I19
      COMMON            /SCHSZ1/NNEL, NNPTL, NNPDE, NNPTS, MM, NNV,
     *                  NNXI, NVST
      COMMON            /SCHSZ2/INDEV
      COMMON            /SCHSZ3/TWOU
      COMMON            /SCHSZ4/TO, K1, K2, K3, K4, JTIMES, ILOC
      COMMON            /SCHSZ5/NNNPTL
C     .. Save statement ..
      SAVE              /SCHSZ1/, /SCHSZ/, /DISCHK/, /SCHSZ2/, /SCHSZ3/,
     *                  /SCHSZ4/, /SCHSZ5/
C     .. Executable Statements ..
      INDEV = IDEV
      IF (ITIME.LT.1 .OR. ITIME.GT.2) THEN
         ERRMSG =
     *' INICHB DETECTED THAT THE SUPPLIED VALUE OF ITIME        (VALUE =
     * I1 ) IS NOT IN THE RANGE ONE TO TWO '
         CALL SCHERR(ERRMSG,1,1,ITIME,0,0,0.0D0,0.0D0)
         ITIME = -1
         RETURN
      END IF
      IF (ITIME.EQ.2 .AND. PDCODE.EQ.'C0CHEB') GO TO 140
      PDCODE = 'C0CHEB'
      TO = TS
      ILOC = -1
      MM = M
      NNPDE = NPDE
      NPTL = NPOLY + 1
      IF (NPOLY.LT.2 .OR. NPOLY.GT.49) THEN
         ERRMSG =
     *' INICHB ROUTINE DETECTED THAT THE SUPPLIED VALUE         OF NPOLY
     * WAS (= I1 ) WHICH IS LESS THAN TWO OR GREATER THAN 49'
         CALL SCHERR(ERRMSG,1,1,NPOLY,0,0,0.0D0,0.0D0)
         ITIME = -1
      END IF
      NNPTS = (NPTL-1)*NEL + 1
      IF (NPTS.NE.NNPTS) THEN
         ERRMSG =
     *' INCORRECT VALUE OF NPTS (=I1) SUPPLIED IN CALL TO
     *  INICHB. THE VALUE SHOULD BE (=I2)'
         CALL SCHERR(ERRMSG,1,2,NPTS,NNPTS,0,0.0D0,0.0D0)
         ITIME = -1
      END IF
      NNEL = NEL
      NNPTL = NPTL
      NNV = NV
      NNXI = NXI
      NVST = NPDE*NPTS + 1
      NEQN = NPDE*NPTS + NV
      IF (NV.GT.0) THEN
         IBAND = NEQN - 1
      ELSE
         IBAND = (NPTL)*NPDE - 1
      END IF
      IF (IBK.NE.(NEL+1)) THEN
         ERRMSG =
     *' INCORRECT VALUE OF IBK (=I1) SUPPLIED IN CALL TO
     *  INICHB. THE VALUE SHOULD BE (=I2) PLUS 1'
         CALL SCHERR(ERRMSG,1,2,IBK,NEL,0,0.0D0,0.0D0)
         ITIME = -1
      END IF
      X(1) = XBK(1)
      X(NPTS) = XBK(IBK)
      ITIME = 1
      IF (X(NPTS).LE.X(1)) THEN
         ERRMSG =
     *' INICHB ROUTINE FOUND THAT THE LAST BREAK-POINT          (=R1) HA
     *S BEEN PLACED BEFORE THE FIRST BREAK-POINT (= R2)'
         CALL SCHERR(ERRMSG,1,0,0,0,2,X(NPTS),X(1))
         ITIME = -1
         RETURN
      END IF
      IF (NEL.LT.1) THEN
         ERRMSG =
     *' INICHB ROUTINE - HAS DETECTED THAT THE                  SUPPLIED
     * VALUE OF NEL ( = I1 ) WHICH IS ILLEGAL '
         CALL SCHERR(ERRMSG,1,1,NEL,0,0,0.0D0,0.0D0)
         ITIME = -1
         RETURN
      END IF
      I = NEL*(NPTL-1) + 1
      IF (I.NE.NPTS) THEN
         ERRMSG =
     *' INIT FOR C0 COLLOC- VALUES OF NEL AND NPTL FORM A       MESH OF
     *(=I1) POINTS BUT NPTS IS SET TO ( =I2)'
         CALL SCHERR(ERRMSG,1,2,I,NPTS,0,0.0D0,0.0D0)
         ITIME = -1
         RETURN
      END IF
      DO 20 I = 2, IBK
         IF (XBK(I).LE.XBK(I-1)) THEN
            ERRMSG =
     *' INICHB - BREAKPOINT NO (=I1) HAS VALUE (=R1)            WHICH IS
     * SMALLER THAN OR EQUAL TO BREAKPOINT NO I1-1              WITH VAL
     *UE (=R2)'
            CALL SCHERR(ERRMSG,1,1,I,0,2,XBK(I),XBK(I-1))
            ITIME = -1
            RETURN
         END IF
   20 CONTINUE
C
C   CALCULATE ROUGH ESTIMATE OF UNIT ROUND-OFF ERROR FOR CHECKING
C
      TWOU = 0.1D0
   40 TEMP = 1.0D0 + TWOU
      IF (1.0D0.EQ.TEMP) THEN
         TWOU = TWOU*2.0D0
      ELSE
         TWOU = TWOU*0.5D0
         GO TO 40
      END IF
C
C  CHECK IF THE BREAK-POINTS MATCH THE COUPLING POINTS.
C
      IF (IBK.GT.2 .AND. NXI.GT.0) THEN
         IBKM1 = IBK - 1
         DO 80 I = 2, IBKM1
            DO 60 J = 1, NXI
               TEMP = DABS(XI(J)-XBK(I))
               TEMP2 = TWOU/DMAX1(TEMP,1.0D0)
               IF (TEMP.LT.TEMP2) THEN
C                 COUPLING POINT IS TOO CLOSE TO BREAK-POINT
                  ERRMSG =
     *' INICHB ROUTINE HAS FOUND THAT COUPLING                  POINT (=
     *I1) HAS VALUE (=R1) WHICH IS VERY CLOSE TO                BREAK-PO
     *INT (=I2) WITH VALUE (=R2)'
                  CALL SCHERR(ERRMSG,1,2,J,I,2,XI(J),XBK(I))
               END IF
   60       CONTINUE
   80    CONTINUE
      END IF
*
C
C  FORM INTEGER CONSTANTS FOR WKSPACE MANIPULATION
C
      NSQ = NPTL*NPTL
      IT = NPDE*NXI
      I2 = NSQ + 1
      I3 = I2 + NSQ
      I4 = I3 + NSQ
      I7 = I4 + NPTL
      I8 = I7 + NPDE*4
      I9 = I8 + NPDE*4
      I10 = I9 + NPDE*NPTL
      I11 = I10 + NPDE*NPTL*3
      I12 = I11 + NPDE*NPTL*3
      I13 = I12 + NPTL
      I14 = I13 + IT
      I15 = I14 + IT
      I16 = I15 + IT
      I17 = I16 + IT
      I18 = I17 + IT
      I19 = I18 + NXI
      I5 = I19 + NV
      I6 = I5 + NEL + 1
      I20 = I6 + NEL*(NPTL-1) + 1
      I10A = I10 + NPDE*NPTL
      I10B = I10A + NPDE*NPTL
      I11A = I11 + NPDE*NPTL
      I11B = I11A + NPDE*NPTL
      K1 = 1
      K2 = K1 + NEQN
      K3 = K2 + NEQN
      K4 = K3 + NEQN
      IF (I20.GT.IWK) THEN
         ERRMSG =
     *' INICHB-ROUTINE WORKSPACE OF SIZE (=I1) IS LESS          THAN REQ
     *UIRED SIZE (=I2)'
         CALL SCHERR(ERRMSG,1,2,IWK,I20,0,0.0D0,0.0D0)
         ITIME = -1
         RETURN
      END IF
      IV = NPDE*NPTS
      IF (NV.GT.0) THEN
         IV = NVST
C        COPY ACROSS THE COUPLING POINTS
         DO 100 I = 1, NXI
            WK(I18+I-1) = XI(I)
  100    CONTINUE
         DO 120 I = 2, NXI
            IF (XI(I).LE.XI(I-1)) THEN
               ERRMSG =
     *' INICHB WARNING THE ODE/PDE COUPLING POINTS              COUPLING
     * POINTS ARE NOT IN STRICTLY INCREASING ORDER'
               CALL SCHERR(ERRMSG,1,0,0,0,0,0.0D0,0.0D0)
            END IF
  120    CONTINUE
      END IF
C
      CALL CSET(NPDE,NPTS,U,WK(I6),WK,WK(I2),WK(I5),NEL,NPTL,WK(I4),
     *          WK(I12),XBK,IBK,WK(I3),U(IV),NV)
C
  140 DO 160 I = 1, NPTS
         X(I) = WK(I6+I-1)
  160 CONTINUE
      NNNPTL = NPTL
      RETURN
      END